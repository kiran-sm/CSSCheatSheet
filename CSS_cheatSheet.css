/* css child property
https://www.codegrepper.com/code-examples/css/css+first+and+second+child

*/

/* 

<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' >

 */
background: linear-gradient(
  to right,
  green 0%,
  green 33%,
  red 33%,
  red 66%,
  blue 66%,
  blue 100%
);

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.min.css"/>

*, *::after, *::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  /* 62.5% of 16px base font size is 10px */
  font-size: 62.5%;
}

/* Preserve 16px body font-size, set body font-size to 1.6rem */
body {
  /* 16px */
  font-size: 1.6rem;
}

.some-element {
  /* 10 * 1.2 = 12px */
  font-size: 1.2rem;
}

body {
  text-rendering: optimizeLegibility;
  overflow-x: hidden !important;
  box-sizing: border-box;
}

<img src="some_image" loading="lazy" width="200" height="200" / > .text-box {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-40%, -50%);
  text-align: center;
}

.background-image-ptoperty {
  /* for adding layer to image */
  background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
    url();
  background-size: cover;
  background-position: center;
  height: 100vh;
  /* background-attachment: fixed; */
}

.btn:visited {
  image-rendering: "./CSS_cheatSheet.css";
  transition: background-color 0.2s, color 0.25;
}

/* when content not fit properly clear those section by adding same class in last/ end of the section */
.clear-fix {
  zoom: 1;
}
.clear-fix::after {
  content: ".";
  clear: both;
  display: block;
  height: 0;
  visibility: hidden;
}

*:focus {
  outline: none;
}

button {
  cursor: pointer;
  font-size: 1.2em;
  font-weight: 800;
  height: 2.5em;
  border: none;
  border-radius: 10px;
  padding: 10px 10px;
  outline: none;
  background-color: #b6bcd94d;
  /* background-color: #656565; */
  /* color: whitesmoke; */
  box-shadow: 0px 5px 7px 0px #565656;
}

button:hover {
  filter: brightness(110%);
}

button:active {
  transform: translate(0, 0.2em);
  background-color: rgba(166, 245, 170, 0.452);
}

@media (min-width: 576px) {
  .largeHide {
    display: none;
  }
}

@media (max-width: 576px) {
  .hide {
    display: none;
  }
}

/* button hover effect */

#selectOptions>div>div.card1:before {
  position: absolute;
  content: "";
 
  width: 14rem;
  height: 14rem;
  transform-origin: 50%;
  border-radius: 6px;
}
#selectOptions>div>div.card1:hover:before {
  border: 5px solid #ffffff70;
  cursor: pointer;
  transform: scale(1.1);
  filter: blur(2px);
  transition: 1000ms transform ease, 2100ms blur ease, 900ms border-color cubic-bezier(0, 0, 0.99, 1.29);
  transition-property: transform, blur,opacity;
  transition-duration: 1000ms, 2100ms, 900ms;
  transition-timing-function: ease, ease, ease;
  transition-delay: 0s, 0s, 0s;
  opacity: 0;
}

/* button hover effect */


/* css sprite */

/* name file name as sprite.svg and call it in css */

/* inside svg sprites */
/* 

<svg xmlns="http://www.w3.org/2000/svg" style="display:none;">
	<defs>

        <symbol id="icon-Alignment" viewBox="0 0 32 32">
           
            <path  d="M0 0h32v32h-32v-32z"></path>
        </symbol>

	</defs>
</svg> 

*/


/* while calling */
/* <svg class="icon icon-D-editor">
			<use xlink:href="../../../app-assets/images/sprites.svg#icon-D-editor">
		</use>
  </svg> */
/* css sprite */



/* css scroll edge starts here*/
.my-project-main-box.right-column-scroll{
  overflow-y: scroll !important;
      height: 65vh !important;
      scroll-snap-type: y mandatory;
  }
  .my-project-main-box.right-column-scroll>div{
  scroll-snap-align: end;
  }
/* css scroll edge ends here*/ 
